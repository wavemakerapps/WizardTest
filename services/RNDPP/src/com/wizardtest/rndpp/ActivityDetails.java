/*Copyright (c) 2015-2016 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/
package com.wizardtest.rndpp;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToOne;
import javax.persistence.Table;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

/**
 * ActivityDetails generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`ActivityDetails`")
public class ActivityDetails implements Serializable {

    private Integer actId;
    private String category;
    private String activityTitle;
    private String activityDetails;
    private String abstract_;
    private String keyPurpose;
    private String valueToCompany;
    private String patentable;
    private Integer requestId;
    private RequestMain requestMain;

    @Id
    @Column(name = "`ActID`", nullable = false, scale = 0, precision = 10)
    public Integer getActId() {
        return this.actId;
    }

    public void setActId(Integer actId) {
        this.actId = actId;
    }

    @Column(name = "`Category`", nullable = true, length = 255)
    public String getCategory() {
        return this.category;
    }

    public void setCategory(String category) {
        this.category = category;
    }

    @Column(name = "`ActivityTitle`", nullable = true, length = 255)
    public String getActivityTitle() {
        return this.activityTitle;
    }

    public void setActivityTitle(String activityTitle) {
        this.activityTitle = activityTitle;
    }

    @Column(name = "`ActivityDetails`", nullable = true, length = 255)
    public String getActivityDetails() {
        return this.activityDetails;
    }

    public void setActivityDetails(String activityDetails) {
        this.activityDetails = activityDetails;
    }

    @Column(name = "`Abstract`", nullable = true, length = 255)
    public String getAbstract_() {
        return this.abstract_;
    }

    public void setAbstract_(String abstract_) {
        this.abstract_ = abstract_;
    }

    @Column(name = "`KeyPurpose`", nullable = true, length = 255)
    public String getKeyPurpose() {
        return this.keyPurpose;
    }

    public void setKeyPurpose(String keyPurpose) {
        this.keyPurpose = keyPurpose;
    }

    @Column(name = "`ValueToCompany`", nullable = true, length = 255)
    public String getValueToCompany() {
        return this.valueToCompany;
    }

    public void setValueToCompany(String valueToCompany) {
        this.valueToCompany = valueToCompany;
    }

    @Column(name = "`Patentable`", nullable = true, length = 255)
    public String getPatentable() {
        return this.patentable;
    }

    public void setPatentable(String patentable) {
        this.patentable = patentable;
    }

    @Column(name = "`RequestID`", nullable = true, scale = 0, precision = 10)
    public Integer getRequestId() {
        return this.requestId;
    }

    public void setRequestId(Integer requestId) {
        this.requestId = requestId;
    }

    @OneToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`ActID`", referencedColumnName = "`RequestID`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`FK_ActivityDetails_TO_ReovFe9`"))
    @Fetch(FetchMode.JOIN)
    public RequestMain getRequestMain() {
        return this.requestMain;
    }

    public void setRequestMain(RequestMain requestMain) {
        if(requestMain != null) {
            this.actId = requestMain.getRequestId();
        }

        this.requestMain = requestMain;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof ActivityDetails)) return false;
        final ActivityDetails activityDetailsInstance = (ActivityDetails) o;
        return Objects.equals(getActId(), activityDetailsInstance.getActId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getActId());
    }
}